/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/mouse.h>

&mmv {
    time-to-max-speed-ms = <1500>;
    acceleration-exponent = <1>;
};

&mwh {
    time-to-max-speed-ms = <2000>;
    acceleration-exponent = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        vpn_toggle {
            bindings = <&kp LG(P)>;
            key-positions = <10 1>;
        };

        close {
            bindings = <&kp LG(Q)>;
            key-positions = <29 30>;
        };

        Lang_switch {
            bindings = <&kp RG(SPACE)>;
            key-positions = <16 19>;
        };

        Web {
            bindings = <&kp RG(S)>;
            key-positions = <17 18>;
        };

        Editor {
            bindings = <&kp RG(Z)>;
            key-positions = <28 31>;
        };

        Save {
            bindings = <&kp LC(S)>;
            key-positions = <16 22>;
        };

        Messenger {
            bindings = <&kp RG(A)>;
            key-positions = <4 7>;
        };

        Cmd {
            bindings = <&kp RG(X)>;
            key-positions = <27 32>;
        };

        Ctrl_p {
            bindings = <&kp RC(P)>;
            key-positions = <13 22>;
        };

        arrow {
            bindings = <&arrow>;
            key-positions = <9 2>;
        };
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            label = "arrow";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GREATER_THAN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
 &kp TAB   &kp Q   &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I   &kp O   &kp P  &kp LBKT  &kp LCTRL   &kp A   &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K   &kp L  &kp SEMICOLON  &mt LEFT_CONTROL SINGLE_QUOTE  &kp LALT   &kp Z   &kp X   &kp C   &kp V   &kp B   &kp N   &kp M  &kp COMMA  &kp DOT  &kp SLASH  &mt LEFT_ALT ESC  &mt LEFT_GUI DELETE   &mo 2  &mt LEFT_SHIFT SPACE  &mt LEFT_SHIFT ENTER   &mo 1  &kp RGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &kp RC(C)  &kp NUMBER_1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp SEMICOLON  &kp RC(V)  &kp RC(LS(I))  &kp HOME  &kp END  &kp BACKSPACE  &kp LS(GRAVE)  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp MINUS  &mt LEFT_CONTROL F12  &kp RC(X)  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &tog 1  &kp LALT  &mt LEFT_CONTROL TAB  &mt LSHFT ENTER  &trans  &kp SPACE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &kp RS(INSERT)  &kp EXCLAMATION  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp BSPC  &kp LCTRL  &tog 4   &none   &none  &kp BACKSPACE  &tog 3  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE  &kp LALT  &tog 5  &kp LC(X)   &none  &kp LC(LA(P))   &none  &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE  &kp LGUI  &trans  &kp SPACE  &mt LSHFT ENTER  &trans  &kp RALT
            >;
        };

        MOUSE_LAYER {
            bindings = <
 &kp TAB  &kp ENTER  &trans  &bl BL_SET 30  &trans  &kp HOME  &kp END  &kp LS(LG(U))  &kp LS(LG(I))  &kp LS(LG(O))  &trans  &trans  &trans  &trans  &mwh SCROLL_HOR(-50)  &mwh SCROLL_HOR(50)  &mwh SCROLL_VERT(50)  &kp PAGE_UP  &mmv MOVE_HOR(-1500)  &mmv MOVE_VERT(1500)  &mmv MOVE_VERT(-1500)  &mmv MOVE_HOR(1500)  &kp LCTRL  &kp LSHFT  &kp LALT  &trans  &trans  &trans  &mwh SCROLL_VERT(-50)  &kp PAGE_DOWN  &trans  &trans  &trans  &trans  &trans  &kp ESC  &kp LCTRL  &kp LEFT_SHIFT  &mkp LCLK  &mkp RCLK  &to 0  &mkp MCLK
            >;
        };

        CALC_LAYER {
            bindings = <
 &trans  &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans  &trans  &trans  &trans  &kp K_NEXT  &kp K_MUTE  &trans  &kp LS(LG(Q))  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp BACKSPACE  &kp MINUS  &kp PLUS  &kp STAR  &kp SLASH  &kp K_PLAY_PAUSE  &kp K_STOP  &trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp K_CALC  &trans  &kp DOT  &trans  &trans  &kp K_VOL_DN  &kp K_VOL_UP  &kp LGUI   &to 0  &kp SPACE  &kp ENTER   &to 0   &to 1
            >;
        };

        GAME_LAYER {
            bindings = <
 &trans  &trans  &trans   &kp W  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &kp A   &kp S   &kp D  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &to 0  &trans
            >;
        };
    };
};

//  layer6 { 
//                        bindings = <
//    &kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp GRAVE
//    &trans &none    &none    &none     &none         &none      &none                 &none            &none          &none             &none &none        
//    &none &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT    &none      &mmv MOVE_HOR(-3500)   &mmv MOVE_VERT(3500)   &mmv MOVE_VERT(-3500)   &mmv MOVE_HOR(3500)   &none &none
//    &none &none    &none    &none     &none         &none    &kp LBKT   &kp RBKT   &mwh SCROLL_HOR(-15) &mwh SCROLL_VERT(-15) &mwh SCROLL_VERT(15) &mwh SCROLL_HOR(15) &none &none      
//                   &none &none    &none     &none         &mkp LCLK &mkp RCLK   &mkp MCLK &none
//                        >;
//                 };
